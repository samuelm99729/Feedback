name: CI/CD - Flask (Build → Test → Docker → Deploy)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  build-test:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      
      - name: Install Dependencies and Run Tests
        # Combine installation and testing for better dependency management
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
          # FIX: Set the PYTHONPATH to include the current directory (project root)
          # This allows Python to find 'app' when 'from app import app' is run.
          export PYTHONPATH=$PYTHONPATH:$(pwd)
          
          # Optional: Compile all Python files (Kept for completeness but not strictly needed)
          python -m compileall .
          
          # Run tests
          pytest --maxfail=1 -q

  build-and-push-image:
    needs: build-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Log in to GHCR
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
      - name: Build Docker image
        run: |
          IMAGE=ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:v${{ github.run_number }}
          docker build -t $IMAGE .
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV
      - run: docker push $IMAGE
      - run: echo "Pushed $IMAGE"

  deploy-render:
    needs: build-and-push-image
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Trigger Render Deploy via API
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
          RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
          IMAGE: ${{ env.IMAGE }}
        run: |
          if [ -z "$RENDER_API_KEY" ] || [ -z "$RENDER_SERVICE_ID" ]; then
            echo "Render secrets not set; skipping deploy."
            exit 1
          fi
          curl -X POST "https://api.render.com/v1/services/${RENDER_SERVICE_ID}/deploys" \
            -H "Authorization: Bearer ${RENDER_API_KEY}" \
            -H "Accept: application/json" \
            -H "Content-Type: application/json" \
            -d "{}"