name: CI/CD - Flask (Build → Test → Docker → Deploy)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  build-test:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      
      - name: Install Dependencies and Run Tests
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
          # FIX from previous issue: Set the PYTHONPATH for local module import
          export PYTHONPATH=$PYTHONPATH:$(pwd)
          
          python -m compileall .
          
          pytest --maxfail=1 -q

  build-and-push-image:
    needs: build-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      # Step 1: Define the image tag using the built-in 'toLower' function
      - name: Define Lowercase Image Tag
        id: image_tag
        run: |
          # Use built-in toLower function to guarantee GHCR compliance
          OWNER_LOWER="${{ github.repository_owner }}"
          REPO_LOWER="${{ github.event.repository.name }}"
          # Apply the conversion to the owner and repo name
          IMAGE_NAME_LOWER=$(echo $OWNER_LOWER/$REPO_LOWER | tr '[:upper:]' '[:lower:]')
          
          FULL_IMAGE_TAG=ghcr.io/$IMAGE_NAME_LOWER:v${{ github.run_number }}
          
          echo "IMAGE=$FULL_IMAGE_TAG" >> $GITHUB_ENV
          echo "Pushed image tag: $FULL_IMAGE_TAG"
          
      - name: Log in to GHCR
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
        
      - name: Build and Push Docker image
        # Reference the IMAGE environment variable set in the previous step
        run: |
          docker build -t ${{ env.IMAGE }} .
          docker push ${{ env.IMAGE }}
          echo "Pushed ${{ env.IMAGE }}"

  deploy-render:
    needs: build-and-push-image
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Trigger Render Deploy via API
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
          RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
          IMAGE: ${{ env.IMAGE }}
        run: |
          if [ -z "$RENDER_API_KEY" ] || [ -z "$RENDER_SERVICE_ID" ]; then
            echo "Render secrets not set; skipping deploy."
            exit 1
          fi
          curl -X POST "https://api.render.com/v1/services/${RENDER_SERVICE_ID}/deploys" \
            -H "Authorization: Bearer ${RENDER_API_KEY}" \
            -H "Accept: application/json" \
            -H "Content-Type: application/json" \
            -d "{}"
